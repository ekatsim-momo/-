#include<cstdio>
#include<cstring>
#include<algorithm>
#include<iostream>
#include<string>
#include<map>
#include<vector>
using namespace std;
int arr[100010], brr[100010];
map<int, int>id;
bool yes[100010];
vector<vector<int>>a;
void dfs(int i,int num,vector<int>&lin)
{
	if (yes[i])
	{
		yes[i] = false;
		lin.push_back(i);
		dfs(id[brr[i]], num + 1, lin);
		id.erase(brr[i]);
		return;
	}
	a.push_back(lin);
}
int main()
{
	int num = 0;
	memset(yes, true, sizeof(yes));
	int n;
	scanf("%d", &n);
	for (int i = 1; i <= n; i++)
		scanf("%d", &arr[i]);
	memcpy(brr, arr, sizeof(arr));
	sort(arr + 1, arr + n + 1);
	for (int i = 1; i <= n; i++)
	{
		id[arr[i]] = i;
	//	cout << arr[i] << endl;
	}
	for (int i = 1; i <= n; i++)
	{
		if (yes[i])
		{
			vector<int>t;
			dfs(i, 0, t);
			num++;
		}
	}
	cout << num << endl;
	int size = a.size();
	for (int i = 0; i < size; i++)
	{
		int size2 = a[i].size();
		cout << size2;
		for (int j = 0; j < size2; j++)
			cout << " " << a[i][j];
		cout << endl;
	}
	return 0;
}
